<Project Sdk="MSBuild.Sdk.Extras">
	<PropertyGroup>
		<TargetFrameworks>netstandard2.0;net48;Xamarin.Mac20;Xamarin.iOS10;Xamarin.TVOS10;Xamarin.WatchOS10;MonoAndroid12.0;uap10.0.19041;Tizen40;</TargetFrameworks>
		<LangVersion>latest</LangVersion>
		<EnableDefaultCompileItems>false</EnableDefaultCompileItems>
		<Nullable>enable</Nullable>
		<!-- NuGet -->
		<Authors>kfrancis</Authors>
		<Copyright>Copyright Â© Kori Francis</Copyright>
		<IsPackable>True</IsPackable>
		<PackageProjectUrl>https://github.com/kfrancis/ocr</PackageProjectUrl>
		<RepositoryUrl>https://github.com/kfrancis/ocr</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageTags>dotnet-xamarin;xamarin;plugin;</PackageTags>
		<IncludeSymbols>True</IncludeSymbols>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<Title>.NET Xamarin OCR Plugin</Title>
		<Description>Plugin.Xamarin.OCR provides the ability to perform OCR on an image using platform API.</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
		<DebugType>portable</DebugType>
        <PackageIcon>icon.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<MinVerAutoIncrement>minor</MinVerAutoIncrement>
		<MinVerBuildMetadata>build</MinVerBuildMetadata>
		<MinVerTagPrefix>v</MinVerTagPrefix>
	</PropertyGroup>
    <PropertyGroup>
        <!-- Enable NuGet package auditing -->
        <NuGetAudit>true</NuGetAudit>

        <!-- Audit direct and transitive packages -->
        <NuGetAuditMode>all</NuGetAuditMode>

        <!-- Report low, moderate, high and critical advisories -->
        <NuGetAuditLevel>low</NuGetAuditLevel>

        <!-- Fails the build on CI or on release when a vulnerability is detected -->
        <WarningsAsErrors Condition="$(ContinuousIntegrationBuild) == 'true' OR '$(Configuration)' == 'Release'">
            (WarningsAsErrors);NU1900;NU1901;NU1902;NU1903;NU1904
        </WarningsAsErrors>
    </PropertyGroup>
	<!-- Package additions -->
	<ItemGroup>
		<Compile Include="*.cs" />
		<None Include="..\..\README.md" Pack="true" PackagePath="." />
		<PackageReference Include="DotNet.ReproducibleBuilds" Version="1.2.39">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="MinVer" Version="6.0.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
	<ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
		<Compile Include="netstandard\*.cs" />
	</ItemGroup>
	<!-- iOS -->
	<ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
		<Compile Include="Platforms\Apple\**\*.cs" />
	</ItemGroup>
	<PropertyGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
		<DefineConstants>$(DefineConstants);IOS;</DefineConstants>
	</PropertyGroup>
	<!-- macOS -->
	<ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.Mac')) ">
		<Compile Include="Platforms\Apple\**\*.cs" />
	</ItemGroup>
	<PropertyGroup Condition=" $(TargetFramework.StartsWith('Xamarin.Mac')) ">
		<DefineConstants>$(DefineConstants);MACOS;</DefineConstants>
	</PropertyGroup>
	<!-- Android -->
	<ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
		<Compile Include="Platforms\Android\**\*.cs" />
		<PackageReference Include="Xamarin.AndroidX.Camera.Camera2" Version="1.3.0">
    </PackageReference>
		<PackageReference Include="Xamarin.AndroidX.Camera.Lifecycle" Version="1.3.0">
    </PackageReference>
		<PackageReference Include="Xamarin.AndroidX.Camera.View" Version="1.3.0">
    </PackageReference>
		<PackageReference Include="Xamarin.Google.MLKit.BarcodeScanning" Version="117.2.0.4">
    </PackageReference>
		<PackageReference Include="Xamarin.Google.MLKit.TextRecognition">
			<Version>116.0.0.5</Version>
		</PackageReference>
		<PackageReference Include="Xamarin.AndroidX.Fragment.Ktx">
			<Version>1.6.2</Version>
		</PackageReference>
	</ItemGroup>
	<PropertyGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
		<DefineConstants>$(DefineConstants);ANDROID;</DefineConstants>
	</PropertyGroup>
	<!-- UWP -->
	<ItemGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
		<Compile Include="Platforms\UWP\**\*.cs" />
	</ItemGroup>
	<PropertyGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
		<!--<TargetPlatformMinVersion>10.0.10240.0</TargetPlatformMinVersion>-->
		<DefineConstants>$(DefineConstants);WINDOWS_UWP;</DefineConstants>
	</PropertyGroup>
	<ItemGroup Condition=" $(TargetFramework.StartsWith('net4')) OR $(TargetFramework.StartsWith('Xamarin.TVOS')) OR $(TargetFramework.StartsWith('Xamarin.WatchOS')) OR $(TargetFramework.StartsWith('Tizen')) ">
		<Compile Include="Platforms\NotImplemented\**\*.cs" />
	</ItemGroup>
	<ItemGroup Condition=" '$(Configuration)' == 'Debug' ">
		<PackageReference Include="Roslynator.Analyzers" Version="4.14.1">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
    <ItemGroup>
	<None Include="..\..\nuget.png" PackagePath="icon.png" Pack="true" />
	<None Include="..\..\README.md" Pack="true" PackagePath="\" />
</ItemGroup>
	<ItemGroup>
		<None Remove="Abstractions\IOcrService.cs" />
	</ItemGroup>
	<ItemGroup>
		<Compile Include="Abstractions\IOcrService.cs" />
	</ItemGroup>
</Project>
